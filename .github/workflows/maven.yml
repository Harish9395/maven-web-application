# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master,develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build with Maven
      run: mvn -B clean install -f pom.xml

    # - name: Deploy to Tomcat
    #   run: |
    #     curl -v -u ${{ secrets.TOMCAT_USER }}:${{ secrets.TOMCAT_PASSWORD }} \
    #     -T /home/runner/work/maven-web-application/maven-web-application/target/maven-web-application.war \
    #     "http://${{ secrets.TOMCAT_HOST }}/manager/text/deploy?path=/maven-web-application&update=true"

    # Login to DockerHub using secrets for credentials
    - name: Login to DockerHub
      env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

    # Build Docker image with a specific tag
    - name: Build Docker Image
      run: docker build -t harish2195/maven-web-application .
    # Push the built image to DockerHub
    - name: Push to DockerHub
      run: docker push harish2195/maven-web-application:latest
        
